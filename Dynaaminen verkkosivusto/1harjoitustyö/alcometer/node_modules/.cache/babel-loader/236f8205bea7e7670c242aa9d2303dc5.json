{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\valtp\\\\Documents\\\\Kouluja\\\\Palautuksia\\\\alcometer\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport FillOptions from './FillOptions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [weight, setWeight] = useState(0);\n  const [bottles, setBottles] = useState(0);\n  const [time, setTime] = useState(0);\n  const [gender, setGender] = useState(0);\n  const [bal, setBal] = useState(0);\n\n  function calculate(e) {\n    e.preventDefault();\n    const litres = bottles * 0.33;\n    const grams = litres * 8 * 4.5;\n    const burning = weight / 10;\n    const gramsLeft = grams - burning * time;\n\n    if (gender === \"male\") {\n      if (gramsLeft / (weight * 0.7) < 0) {\n        setBal(0);\n      } else {\n        setBal(gramsLeft / (weight * 0.7));\n      }\n    } else {\n      if (gramsLeft / (weight * 0.6) < 0) {\n        setBal(0);\n      } else {\n        setBal(gramsLeft / (weight * 0.6));\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: calculate,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Calculating alcohol blood level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Weight:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.1\",\n        onChange: e => setWeight(e.target.value),\n        value: weight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bottles:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        type: \"number\",\n        onChange: e => setBottles(e.target.value),\n        value: bottles,\n        children: /*#__PURE__*/_jsxDEV(FillOptions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        type: \"number\",\n        onChange: e => setTime(e.target.value),\n        value: time,\n        children: /*#__PURE__*/_jsxDEV(FillOptions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      value: gender,\n      onChange: e => setGender(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"male\",\n        name: \"gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \" Male\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"female\",\n        name: \"gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" Female\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blood alcohol level:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n        children: bal.toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QH61TLoGzBmWWCXDohMA0DbEKYs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/valtp/Documents/Kouluja/Palautuksia/alcometer/src/App.js"],"names":["useState","FillOptions","App","weight","setWeight","bottles","setBottles","time","setTime","gender","setGender","bal","setBal","calculate","e","preventDefault","litres","grams","burning","gramsLeft","target","value","toFixed"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;;AAEA,WAASa,SAAT,CAAmBC,CAAnB,EAAsB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAGX,OAAO,GAAG,IAAzB;AACA,UAAMY,KAAK,GAAGD,MAAM,GAAG,CAAT,GAAa,GAA3B;AACA,UAAME,OAAO,GAAGf,MAAM,GAAG,EAAzB;AACA,UAAMgB,SAAS,GAAGF,KAAK,GAAIC,OAAO,GAAGX,IAArC;;AACE,QAAIE,MAAM,KAAK,MAAf,EAAuB;AACrB,UAAKU,SAAS,IAAIhB,MAAM,GAAG,GAAb,CAAV,GAA+B,CAAnC,EAAsC;AAACS,QAAAA,MAAM,CAAC,CAAD,CAAN;AAAU,OAAjD,MACK;AACHA,QAAAA,MAAM,CAAEO,SAAS,IAAIhB,MAAM,GAAG,GAAb,CAAX,CAAN;AACD;AAGF,KAPD,MAOO;AACL,UAAKgB,SAAS,IAAIhB,MAAM,GAAG,GAAb,CAAV,GAA+B,CAAnC,EAAsC;AAACS,QAAAA,MAAM,CAAC,CAAD,CAAN;AAAU,OAAjD,MACK;AACHA,QAAAA,MAAM,CAAEO,SAAS,IAAIhB,MAAM,GAAG,GAAb,CAAX,CAAN;AACD;AACF;AACJ;;AAID,sBACE;AAAM,IAAA,QAAQ,EAAEU,SAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,KAA1B;AAAgC,QAAA,QAAQ,EAAEC,CAAC,IAAIV,SAAS,CAACU,CAAC,CAACM,MAAF,CAASC,KAAV,CAAxD;AAA0E,QAAA,KAAK,EAAElB;AAAjF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAEW,CAAC,IAAIR,UAAU,CAACQ,CAAC,CAACM,MAAF,CAASC,KAAV,CAA/C;AAAiE,QAAA,KAAK,EAAEhB,OAAxE;AAAA,+BAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAeE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAES,CAAC,IAAIN,OAAO,CAACM,CAAC,CAACM,MAAF,CAASC,KAAV,CAA5C;AAA8D,QAAA,KAAK,EAAEd,IAArE;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAqBE;AAAK,MAAA,KAAK,EAAEE,MAAZ;AAAoB,MAAA,QAAQ,EAAEK,CAAC,IAAIJ,SAAS,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAA5C;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,MAA1B;AAAiC,QAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF,wBAGE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,QAA1B;AAAmC,QAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eA2BE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGV,GAAG,CAACW,OAAJ,CAAY,CAAZ;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BF,eAiCE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GAtEQpB,G;;KAAAA,G;AAwET,eAAeA,GAAf","sourcesContent":["\nimport { useState } from 'react';\nimport FillOptions from './FillOptions';\nimport './App.css';\n\nfunction App() {\n  const [weight, setWeight] = useState(0)\n  const [bottles, setBottles] = useState(0)\n  const [time, setTime] = useState(0)\n  const [gender, setGender] = useState(0)\n  const [bal, setBal] = useState(0)\n\n  function calculate(e) {\n    e.preventDefault();\n    const litres = bottles * 0.33\n    const grams = litres * 8 * 4.5\n    const burning = weight / 10\n    const gramsLeft = grams - (burning * time)\n      if (gender === \"male\") {\n        if ((gramsLeft / (weight * 0.7)) < 0) {setBal(0)}\n        else {\n          setBal( gramsLeft / (weight * 0.7))\n        }\n        \n        \n      } else {\n        if ((gramsLeft / (weight * 0.6)) < 0) {setBal(0)}\n        else {\n          setBal( gramsLeft / (weight * 0.6))\n        }\n      }\n  }\n\n\n\n  return (\n    <form onSubmit={calculate}>\n      <h3>Calculating alcohol blood level</h3>\n      <div>\n        <label>Weight:</label>\n        <input type=\"number\" step=\"0.1\" onChange={e => setWeight(e.target.value)} value={weight}/>\n      </div>\n      <div>\n        <label>Bottles:</label>\n        <select type=\"number\" onChange={e => setBottles(e.target.value)} value={bottles}>\n\n          <FillOptions />\n\n   \n        </select>\n      </div>\n      <div>\n        <label>Time:</label>\n        <select type=\"number\" onChange={e => setTime(e.target.value)} value={time}>\n          <FillOptions />\n        </select>\n      </div>\n      <div value={gender} onChange={e => setGender(e.target.value)}>\n        <label>Gender:</label>\n        <input type=\"radio\" value=\"male\" name=\"gender\" /> Male\n        <input type=\"radio\" value=\"female\" name=\"gender\" /> Female\n      </div>\n\n      <div>\n        <label>Blood alcohol level:</label>\n        <output>\n          {bal.toFixed(2)}</output>\n      </div>\n\n      <div>\n        <button>Calculate</button>\n      </div>\n\n    </form>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}